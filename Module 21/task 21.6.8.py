# Мы уже работали с многомерными списками и решали задачи, где с помощью list comprehensions «выпрямляли» его в один.
# Однако такой фокус не пройдёт, если у элементов разные уровни вложенности и этих списков неограниченное количество.
#
# Дан вот такой список:
#
nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13], [14, 15], [16, 17, 18]]]
#
# Напишите рекурсивную функцию, которая раскрывает все вложенные списки, то есть оставляет только внешний список.
#
# Ответ: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
#
# Подсказка: можно возвращать списки и срезы списков.

def change_list(*args, new_list = list()):
    for i_item in args:
        if isinstance(i_item, list):
            change_list(*i_item)
        else:
            new_list.append(i_item)
    return new_list
print(change_list(nice_list))